{"remainingRequest":"/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/thread-loader/dist/cjs.js??ref--11-1!/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/docz-core/node_modules/babel-loader/lib/index.js??ref--11-2!/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/source-map-loader/index.js!/Users/didi/Desktop/Luffy/cometUi/comet/src/components/Button/index.tsx","dependencies":[{"path":"/Users/didi/Desktop/Luffy/cometUi/comet/src/components/Button/index.tsx","mtime":1610348116676},{"path":"/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/cache-loader/dist/cjs.js","mtime":1609410236420},{"path":"/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/thread-loader/dist/cjs.js","mtime":1609410238445},{"path":"/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":1609410225369},{"path":"/Users/didi/Desktop/Luffy/cometUi/comet/node_modules/source-map-loader/index.js","mtime":1609410238603}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2luaGVyaXRzIjsKaW1wb3J0IF9jcmVhdGVTdXBlciBmcm9tICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvbm9kZV9tb2R1bGVzL2JhYmVsLXByZXNldC1yZWFjdC1hcHAvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKdmFyIF9qc3hGaWxlTmFtZSA9ICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvc3JjL2NvbXBvbmVudHMvQnV0dG9uL2luZGV4LnRzeCI7CgooZnVuY3Rpb24gKCkgewogIHZhciBlbnRlck1vZHVsZSA9IHR5cGVvZiByZWFjdEhvdExvYWRlckdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyByZWFjdEhvdExvYWRlckdsb2JhbC5lbnRlck1vZHVsZSA6IHVuZGVmaW5lZDsKICBlbnRlck1vZHVsZSAmJiBlbnRlck1vZHVsZShtb2R1bGUpOwp9KSgpOwoKdmFyIF9fc2lnbmF0dXJlX18gPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdC5zaWduYXR1cmUgOiBmdW5jdGlvbiAoYSkgewogIHJldHVybiBhOwp9OwoKLyoqIFVJ57uE5Lu25rqQ5paH5Lu277yM5YyF5ZCr5pW05Liq57uE5Lu255qE5YaF5a655ZKM6YC76L6RICovCmltcG9ydCBSZWFjdCBmcm9tICJyZWFjdCI7IC8vIGltcG9ydCAqIGFzIE15QnV0dG9uIGZyb20gJ2NvbWV0LXVpLWRvdWJhbyc7CgppbXBvcnQgY2xhc3NOYW1lcyBmcm9tICdjbGFzc25hbWVzJzsKaW1wb3J0ICcuL2luZGV4Lmxlc3MnOwp2YXIgQnV0dG9uVHlwZXMgPSBbImRlZmF1bHQiLCAicHJpbWFyeSJdOwp2YXIgQnV0dG9uU2l6ZXMgPSBbImxhcmdlIiwgInNtYWxsIiwgImRlZmF1bHQiXTsKCmlmICh0eXBlb2YgSUJ1dHRvblByb3BzICE9PSAndW5kZWZpbmVkJyAmJiBJQnV0dG9uUHJvcHMgJiYgSUJ1dHRvblByb3BzID09PSBPYmplY3QoSUJ1dHRvblByb3BzKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKElCdXR0b25Qcm9wcykpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoSUJ1dHRvblByb3BzLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiSUJ1dHRvblByb3BzIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9CdXR0b24vaW5kZXgudHN4IgogICAgfQogIH0pOwp9Cgo7CgppZiAodHlwZW9mIElCdXR0b25TdGF0ZSAhPT0gJ3VuZGVmaW5lZCcgJiYgSUJ1dHRvblN0YXRlICYmIElCdXR0b25TdGF0ZSA9PT0gT2JqZWN0KElCdXR0b25TdGF0ZSkgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShJQnV0dG9uU3RhdGUpKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KElCdXR0b25TdGF0ZSwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIklCdXR0b25TdGF0ZSIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvQnV0dG9uL2luZGV4LnRzeCIKICAgIH0KICB9KTsKfQoKOyAvLyBjbGFzcyDlhpnms5UKCnZhciBCdXR0b24gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHsKICBfaW5oZXJpdHMoQnV0dG9uLCBfUmVhY3QkQ29tcG9uZW50KTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihCdXR0b24pOwoKICBmdW5jdGlvbiBCdXR0b24oKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQnV0dG9uKTsKCiAgICByZXR1cm4gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfQoKICBfY3JlYXRlQ2xhc3MoQnV0dG9uLCBbewogICAga2V5OiAicmVuZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7CiAgICAgIHZhciBfY2xhc3NOYW1lczsKCiAgICAgIHZhciBfdGhpcyRwcm9wcyA9IHRoaXMucHJvcHMsCiAgICAgICAgICBkaXNhYmxlZCA9IF90aGlzJHByb3BzLmRpc2FibGVkLAogICAgICAgICAgcHJlZml4Q2xzID0gX3RoaXMkcHJvcHMucHJlZml4Q2xzLAogICAgICAgICAgY2xhc3NOYW1lID0gX3RoaXMkcHJvcHMuY2xhc3NOYW1lLAogICAgICAgICAgY2hpbGRyZW4gPSBfdGhpcyRwcm9wcy5jaGlsZHJlbiwKICAgICAgICAgIHR5cGUgPSBfdGhpcyRwcm9wcy50eXBlLAogICAgICAgICAgc2l6ZSA9IF90aGlzJHByb3BzLnNpemU7CiAgICAgIHZhciBzaXplQ2xzID0gJyc7CgogICAgICBzd2l0Y2ggKHNpemUpIHsKICAgICAgICBjYXNlICdsYXJnZSc6CiAgICAgICAgICBzaXplQ2xzID0gJ2xnJzsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBjYXNlICdzbWFsbCc6CiAgICAgICAgICBzaXplQ2xzID0gJ3NtJzsKICAgICAgICAgIGJyZWFrOwoKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgc2l6ZUNscyA9ICcnOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0gLy8g5p6E5bu657G7CgoKICAgICAgdmFyIGNsYXNzZXMgPSBjbGFzc05hbWVzKHByZWZpeENscywgY2xhc3NOYW1lLCAoX2NsYXNzTmFtZXMgPSB7fSwgX2RlZmluZVByb3BlcnR5KF9jbGFzc05hbWVzLCAiIi5jb25jYXQocHJlZml4Q2xzLCAiLSIpLmNvbmNhdCh0eXBlKSwgdHlwZSksIF9kZWZpbmVQcm9wZXJ0eShfY2xhc3NOYW1lcywgIiIuY29uY2F0KHByZWZpeENscywgIi0iKS5jb25jYXQoc2l6ZUNscyksIHNpemVDbHMpLCBfY2xhc3NOYW1lcykpOwogICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3QuRnJhZ21lbnQsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KCJidXR0b24iLCB7CiAgICAgICAgZGlzYWJsZWQ6IGRpc2FibGVkLAogICAgICAgIGNsYXNzTmFtZTogY2xhc3NlcywKICAgICAgICBfX3NlbGY6IHRoaXMsCiAgICAgICAgX19zb3VyY2U6IHsKICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsCiAgICAgICAgICBsaW5lTnVtYmVyOiA1MiwKICAgICAgICAgIGNvbHVtbk51bWJlcjogMTMKICAgICAgICB9CiAgICAgIH0sIGNoaWxkcmVuKSwgIjsiKTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJfX3JlYWN0c3RhbmRpbl9fcmVnZW5lcmF0ZUJ5RXZhbCIsCiAgICAvLyBAdHMtaWdub3JlCiAgICB2YWx1ZTogZnVuY3Rpb24gX19yZWFjdHN0YW5kaW5fX3JlZ2VuZXJhdGVCeUV2YWwoa2V5LCBjb2RlKSB7CiAgICAgIC8vIEB0cy1pZ25vcmUKICAgICAgdGhpc1trZXldID0gZXZhbChjb2RlKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBCdXR0b247Cn0oUmVhY3QuQ29tcG9uZW50KTsgLy8gaG9vayDlhpnms5UKLy8gY29uc3QgQnV0dG9uOiBSZWFjdC5GdW5jdGlvbkNvbXBvbmVudDxJQnV0dG9uUHJvcHM+ID0gKHByb3BzKSA9PiB7Ci8vICAgICBjb25zdCB7IGNoaWxkcmVuICx0eXBlID0gJ2RlZmF1bHQnfSA9IHByb3BzOwovLyAgICAgcmV0dXJuIDxidXR0b24gY2xhc3NOYW1lPXt0eXBlfT57Y2hpbGRyZW59PC9idXR0b24+OwovLyB9OwovLyDkvb/nlKhob29r55qE5LyY5Yq/IDogCi8vIOeugOWMluWOn+adpeWGmeWcqOeUn+WRveWRqOacn+S4reWkjeadgueahOS7o+eggeWdl++8jAovLyDlrozlhajmi6XmirHlh73mlbAgCgoKQnV0dG9uLmRlZmF1bHRQcm9wcyA9IHZvaWQgMDsKQnV0dG9uLnByb3BUeXBlcyA9IHZvaWQgMDsKZXhwb3J0IHsgQnV0dG9uIGFzIGRlZmF1bHQgfTsKCmlmICh0eXBlb2YgQnV0dG9uICE9PSAndW5kZWZpbmVkJyAmJiBCdXR0b24gJiYgQnV0dG9uID09PSBPYmplY3QoQnV0dG9uKSAmJiBPYmplY3QuaXNFeHRlbnNpYmxlKEJ1dHRvbikpIHsKICBPYmplY3QuZGVmaW5lUHJvcGVydHkoQnV0dG9uLCAnX19maWxlbWV0YScsIHsKICAgIGVudW1lcmFibGU6IHRydWUsCiAgICBjb25maWd1cmFibGU6IHRydWUsCiAgICB2YWx1ZTogewogICAgICBuYW1lOiAiQnV0dG9uIiwKICAgICAgZmlsZW5hbWU6ICJzcmMvY29tcG9uZW50cy9CdXR0b24vaW5kZXgudHN4IgogICAgfQogIH0pOwp9CgppZiAodHlwZW9mIEJ1dHRvbiAhPT0gJ3VuZGVmaW5lZCcgJiYgQnV0dG9uICYmIEJ1dHRvbiA9PT0gT2JqZWN0KEJ1dHRvbikgJiYgT2JqZWN0LmlzRXh0ZW5zaWJsZShCdXR0b24pKSB7CiAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEJ1dHRvbiwgJ19fZmlsZW1ldGEnLCB7CiAgICBlbnVtZXJhYmxlOiB0cnVlLAogICAgY29uZmlndXJhYmxlOiB0cnVlLAogICAgdmFsdWU6IHsKICAgICAgbmFtZTogIkJ1dHRvbiIsCiAgICAgIGZpbGVuYW1lOiAic3JjL2NvbXBvbmVudHMvQnV0dG9uL2luZGV4LnRzeCIKICAgIH0KICB9KTsKfQoKOwoKKGZ1bmN0aW9uICgpIHsKICB2YXIgcmVhY3RIb3RMb2FkZXIgPSB0eXBlb2YgcmVhY3RIb3RMb2FkZXJHbG9iYWwgIT09ICd1bmRlZmluZWQnID8gcmVhY3RIb3RMb2FkZXJHbG9iYWwuZGVmYXVsdCA6IHVuZGVmaW5lZDsKCiAgaWYgKCFyZWFjdEhvdExvYWRlcikgewogICAgcmV0dXJuOwogIH0KCiAgcmVhY3RIb3RMb2FkZXIucmVnaXN0ZXIoQnV0dG9uVHlwZXMsICJCdXR0b25UeXBlcyIsICIvVXNlcnMvZGlkaS9EZXNrdG9wL0x1ZmZ5L2NvbWV0VWkvY29tZXQvc3JjL2NvbXBvbmVudHMvQnV0dG9uL2luZGV4LnRzeCIpOwogIHJlYWN0SG90TG9hZGVyLnJlZ2lzdGVyKEJ1dHRvblNpemVzLCAiQnV0dG9uU2l6ZXMiLCAiL1VzZXJzL2RpZGkvRGVza3RvcC9MdWZmeS9jb21ldFVpL2NvbWV0L3NyYy9jb21wb25lbnRzL0J1dHRvbi9pbmRleC50c3giKTsKICByZWFjdEhvdExvYWRlci5yZWdpc3RlcihCdXR0b24sICJCdXR0b24iLCAiL1VzZXJzL2RpZGkvRGVza3RvcC9MdWZmeS9jb21ldFVpL2NvbWV0L3NyYy9jb21wb25lbnRzL0J1dHRvbi9pbmRleC50c3giKTsKfSkoKTsKCjsKCihmdW5jdGlvbiAoKSB7CiAgdmFyIGxlYXZlTW9kdWxlID0gdHlwZW9mIHJlYWN0SG90TG9hZGVyR2xvYmFsICE9PSAndW5kZWZpbmVkJyA/IHJlYWN0SG90TG9hZGVyR2xvYmFsLmxlYXZlTW9kdWxlIDogdW5kZWZpbmVkOwogIGxlYXZlTW9kdWxlICYmIGxlYXZlTW9kdWxlKG1vZHVsZSk7Cn0pKCk7"},{"version":3,"sources":["/Users/didi/Desktop/Luffy/cometUi/comet/src/components/Button/index.tsx"],"names":["React","classNames","ButtonTypes","ButtonSizes","Button","props","disabled","prefixCls","className","children","type","size","sizeCls","classes","Component","defaultProps","propTypes"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AAEA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,cAAP;AAEA,IAAMC,WAAW,GAAG,CAAC,SAAD,EAAW,SAAX,CAApB;AAEA,IAAMC,WAAW,GAAG,CAAC,OAAD,EAAS,OAAT,EAAiB,SAAjB,CAApB;;;;;;;;;;;;;AASC;;;;;;;;;;;;;AAC+B,C,CAChC;;IACqBC,M;;;;;;;;;;;;;6BAUR;AAAA;;AAAA,wBAC4D,KAAKC,KADjE;AAAA,UACGC,QADH,eACGA,QADH;AAAA,UACaC,SADb,eACaA,SADb;AAAA,UACwBC,SADxB,eACwBA,SADxB;AAAA,UACmCC,QADnC,eACmCA,QADnC;AAAA,UAC6CC,IAD7C,eAC6CA,IAD7C;AAAA,UACmDC,IADnD,eACmDA,IADnD;AAEL,UAAIC,OAAO,GAAG,EAAd;;AACA,cAAOD,IAAP;AACA,aAAK,OAAL;AACIC,UAAAA,OAAO,GAAG,IAAV;AACA;;AACJ,aAAK,OAAL;AACIA,UAAAA,OAAO,GAAG,IAAV;AACA;;AACJ;AACIA,UAAAA,OAAO,GAAG,EAAV;AACA;AATJ,OAHK,CAcL;;;AACA,UAAMC,OAAO,GAAGZ,UAAU,CAACM,SAAD,EAAWC,SAAX,4DAClBD,SADkB,cACLG,IADK,GACIA,IADJ,0CAElBH,SAFkB,cAELK,OAFK,GAEOA,OAFP,gBAA1B;AAIA,0BAAO,uDACH;AAAQ,QAAA,QAAQ,EAAEN,QAAlB;AAA4B,QAAA,SAAS,EAAEO,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiDJ,QAAjD,CADG,MAAP;AAIH;;;;;;;;;;;EAjC+BT,KAAK,CAACc,S,GAmC1C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AA3CqBV,M,CACVW,Y;AADUX,M,CAMVY,S;SANUZ,M;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAdfF,W;0BAEAC,W;0BAYeC,M","sourcesContent":["/** UI组件源文件，包含整个组件的内容和逻辑 */\nimport React from \"react\";\n// import * as MyButton from 'comet-ui-doubao';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './index.less';\n\nconst ButtonTypes = [\"default\",\"primary\"];\ntype ButtonType = (typeof ButtonTypes)[number];\nconst ButtonSizes = [\"large\",\"small\",\"default\"];\ntype ButtonSize = (typeof ButtonSizes)[number];\nexport interface IButtonProps {\n    size?: ButtonSize;\n    type?: ButtonType;\n    children?: React.ReactNode;\n    prefixCls?: string;\n    className?: string;\n    disabled?: boolean;\n};\nexport interface IButtonState {};\n// class 写法\nexport default class Button extends React.Component<IButtonProps, IButtonState> {\n    static defaultProps: {\n        prefixCls: 'comet-btn';\n        type: 'default';\n        size: 'small';\n    }\n    static propTypes: {\n        type: PropTypes.Requireable<string>;\n        size: PropTypes.Requireable<\"small\" | \"large\">;\n    }\n    render() {\n        const { disabled, prefixCls, className, children, type, size } = this.props;\n        let sizeCls = '';\n        switch(size) {\n        case 'large':\n            sizeCls = 'lg';\n            break;\n        case 'small':\n            sizeCls = 'sm';\n            break;\n        default:\n            sizeCls = '';\n            break;\n        }\n        // 构建类\n        const classes = classNames(prefixCls,className, {\n            [`${prefixCls}-${type}`]: type,\n            [`${prefixCls}-${sizeCls}`]: sizeCls,\n        });\n        return <>\n            <button disabled={disabled} className={classes}>{children}</button>;\n            {/* <MyButton type=\"primary\">我的按钮啊</MyButton> */}\n        </>;\n    }\n}\n// hook 写法\n// const Button: React.FunctionComponent<IButtonProps> = (props) => {\n//     const { children ,type = 'default'} = props;\n//     return <button className={type}>{children}</button>;\n// };\n\n// 使用hook的优势 : \n// 简化原来写在生命周期中复杂的代码块，\n// 完全拥抱函数 "]}]}